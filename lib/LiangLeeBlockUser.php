<?php
/** LiangLeeBlockUser
 * Block a username
 * @package LiangLeeFramework
 * @subpackage  LiangLeeBlockuser 
 * @author Liang Lee
 * @copyright Copyright 2013, Liang Lee
 * @ide The Code is Generated by Liang Lee php IDE.
 * @File LiangLeeBlockUser.php
 */
/**
* BlockUser's list's for user settings
* Uses lee_framework_get_options(<data>);
*/
function lee_blockuser_view($data){
$users = lee_framework_get_options($data);
foreach($users as $user){
$users = elgg_view_entity_icon(get_user_by_username($user), 'tiny', array('use_hover' => false));
$names = get_user_by_username($user)->name;			
$list = '<div class="LiangLee_blockuser_listdata"><div class="LiangLee_blockuser_list">'.elgg_view_image_block($users , $names).'</div></div>';
if(lee_loggedin_entity_username == $user || empty($names)){unset($list);}
echo  $list;
}}
/**
* Block a access for profile
* Uses blockuser_access(<forward>, <usersettings guid>);
* $forward = forward if a username match
* $user = a userguid who's settings need to be check
*/  
function blockuser_access($forward = '', $user){
$settings = elgg_get_plugin_user_setting('blockuser_get', $user->guid, 'blockuser');
$users = lee_framework_get_options($settings); 
if(!lee_loggedin_admin && lee_loggedin_entity_username !== elgg_get_page_owner_entity()->username && in_array(lee_loggedin_entity_username, $users)){
	     if(!empty($forward) && $profileavatar == 0){forward($forward);}
	}
}	
/**
* Block a access for messages
* Uses blockuser_access_messages(<forward>, <usersettings guid>);
* $forward = forward if a username match
* $user = a userguid who's settings need to be check
*/  		  
function blockuser_access_messages($forward = '' , $user){
$settings = elgg_get_plugin_user_setting('blockuser_get', $user, 'blockuser');
$users = lee_framework_get_options($settings); 
if(!lee_loggedin_admin && in_array(lee_loggedin_entity_username, $users)){ 
	     if(!empty($forward)){forward($forward);}
		}
}
/**
* View a ajax form
* Uses lee_blockuser_view_ajax();
* return form
*/ 
function lee_blockuser_view_ajax(){
lee_set_ajax_submit(array('form_id' => '#block', 'process_id' => '#wait'));
$url_gen = lee_framework_encode_64(elgg_get_page_owner_entity()->username);
$ajax = elgg_view_form('blockuser/ajax/view', array(
	'action' => 'mod/blockuser/ajax_block.php?block_user='.$url_gen,
	'type' => 'GET',
	'id' => 'block'
));
return $ajax;
}

function blockuser_all_ini($hook, $type, $returnvalue, $params){
//Get owner entity using url third parameters url/plugin/owner/<user>
$blocks = array('groups', 'blog', 'page', 'photos', 'bookmarks', 'files','discussion');
if(in_array($type, $blocks)){
   if(isset($returnvalue['segments'][1]) && !empty($returnvalue['segments'][1]) && !elgg_is_admin_logged_in()){
	    if(get_entity($returnvalue['segments'][1])){
        $data = get_entity($returnvalue['segments'][1])->getOwnerEntity();
		blockuser_access('/blockuser', $data);
		}
    }
}	
//Get owner entity using url third parameters url/plugin/owner/<user>; Using username
$block_2 = array('thewire');
if(in_array($type, $block_2)){
if(isset($returnvalue['segments'][1]) && !empty($returnvalue['segments'][1]) && !elgg_is_admin_logged_in()){
        if(get_user_by_username($returnvalue['segments'][1])){
	    $data = get_user_by_username($returnvalue['segments'][1]);
		blockuser_access('/blockuser', $data);
		}
    }
}
//Get owner entity using url second parameters url/plugin/<user>; Using username
$block_3 = array('friends');
if(in_array($type, $block_3)){
if(isset($returnvalue['segments'][0]) && !empty($returnvalue['segments'][0]) && !elgg_is_admin_logged_in()){
	    if(get_user_by_username($returnvalue['segments'][0])){
        $data = get_user_by_username($returnvalue['segments'][0]);
		blockuser_access('/blockuser', $data);
		}
    }
}

}